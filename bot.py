import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackContext, filters, ConversationHandler

# –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π ID ‚Äî –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –æ—Ç–≤–µ—Ç—ã —Å—é–¥–∞
ADMIN_ID = 301661957  # —Ç–≤–æ–π Telegram ID

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
QUESTION1, QUESTION2, POLL, PHONE = range(4)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
user_data = {}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

async def start(update: Update, context: CallbackContext.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º. –ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–µ–º —Ç—ã –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—à—å—Å—è?")
    return QUESTION1

async def question1(update: Update, context: CallbackContext.DEFAULT_TYPE):
    user_data[update.effective_user.id] = {'interest': update.message.text}
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ê —Ç–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏, —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–µ–Ω—å?")
    return QUESTION2

async def question2(update: Update, context: CallbackContext.DEFAULT_TYPE):
    user_data[update.effective_user.id]['time'] = update.message.text
    reply_keyboard = [["–£—Ç—Ä–æ–º", "–î–Ω—ë–º", "–í–µ—á–µ—Ä–æ–º"]]
    await update.message.reply_text(
        "–ö–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–≤—è–∑—å?",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return POLL

async def poll(update: Update, context: CallbackContext.DEFAULT_TYPE):
    user_data[update.effective_user.id]['time_pref'] = update.message.text
    contact_button = KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    reply_markup = ReplyKeyboardMarkup([[contact_button]], one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–û–∫–µ–π! –û—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:", reply_markup=reply_markup)
    return PHONE

async def phone(update: Update, context: CallbackContext.DEFAULT_TYPE):
    contact = update.message.contact.phone_number if update.message.contact else update.message.text
    user_data[update.effective_user.id]['phone'] = contact

    # –°–±–æ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    data = user_data[update.effective_user.id]
    text = (
        f"üì• –ù–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç @{update.effective_user.username}:\n\n"
        f"üß† –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è: {data['interest']}\n"
        f"‚è± –í—Ä–µ–º—è –≤ –¥–µ–Ω—å: {data['time']}\n"
        f"üïí –£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è —Å–≤—è–∑–∏: {data['time_pref']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}"
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–±–µ
    await context.bot.send_message(chat_id=ADMIN_ID, text=text)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è üí¨")
    return ConversationHandler.END

async def cancel(update: Update, context: CallbackContext.DEFAULT_TYPE):
    await update.message.reply_text("–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω.")
    return ConversationHandler.END

def main():
    import os
    TOKEN = os.getenv("BOT_TOKEN")
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            QUESTION1: [MessageHandler(filters.TEXT & ~filters.COMMAND, question1)],
            QUESTION2: [MessageHandler(filters.TEXT & ~filters.COMMAND, question2)],
            POLL: [MessageHandler(filters.TEXT & ~filters.COMMAND, poll)],
            PHONE: [MessageHandler(filters.CONTACT | filters.TEXT & ~filters.COMMAND, phone)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == '__main__':
    main()
